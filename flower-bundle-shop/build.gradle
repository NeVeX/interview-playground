
// Using the shadowJar plugin to build and package the application with the dependencies required
plugins {
    id 'com.github.johnrengelman.shadow' version '1.2.3'
}

apply plugin: 'java'
apply plugin: 'com.github.johnrengelman.shadow'

// Need to reset the java properties after the plugin is loaded above
sourceCompatibility = javaSourceCompatibility
targetCompatibility = javaTargetCompatibility

repositories {
    mavenCentral()
}

// Setting JAR manifest properties (main-class is required)
jar {
    manifest {
        attributes(
            'Main-Class': 'com.mark.flowershop.FlowerBundleShopApplication',
            'Implementation-Title': 'Mark\'s Flower Bundle Shop Application',
            'Implementation-Version': version)
    }
}

dependencies {
    compile group: 'org.apache.commons', name: 'commons-lang3', version: '3.4' // StringUtils support (among others)
    compile group: 'com.fasterxml.jackson.core', name: 'jackson-databind', version: '2.8.3' // JSON de/serializations

    // Adding logging support
    compile group: 'org.slf4j', name: 'slf4j-api', version: '1.7.21' // SL4J API
    compile group: 'org.slf4j', name: 'slf4j-log4j12', version: '1.7.21' // SL4J-Log4j adapter
    compile group: 'org.apache.logging.log4j', name: 'log4j-core', version: '2.6.2' // Log4j

    // Bring in some testing libraries
    testCompile group: 'junit', name: 'junit', version: '4.12'
    testCompile group: 'org.assertj', name: 'assertj-core', version: '3.5.2'
}

// Setting the test task to show running tests and the status of each once completed.
// Also showing exceptions on failures.
test {

    beforeTest { descriptor ->
        logger.lifecycle("Running test: ${descriptor}")
    }

    afterTest { descriptor, result ->
        logger.lifecycle("Executed test ${descriptor} with result: ${result.resultType}")
    }

    testLogging {
        showStackTraces = true
        exceptionFormat = "full"
    }
}

// Configuration for creating the full jar application
shadowJar {
    baseName = rootProject.name
    classifier = 'full'
    version = version
}